// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders with snapshot 1`] = `
<View
  style={
    Object {
      "flex": 1,
      "justifyContent": "space-evenly",
      "paddingTop": 70,
    }
  }
>
  <View
    style={
      Object {
        "backgroundColor": "#8c8eab",
        "height": 1,
      }
    }
  />
  <View
    style={
      Object {
        "alignItems": "center",
        "flex": 1,
        "justifyContent": "center",
      }
    }
  >
    <Text
      style={
        Object {
          "color": "black",
          "fontSize": 16,
          "fontWeight": "500",
        }
      }
    >
      No Data
    </Text>
  </View>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#4290f5",
        "borderRadius": 10,
        "height": 40,
        "justifyContent": "center",
        "position": "absolute",
        "right": 20,
        "top": 20,
        "width": 100,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <View
        style={
          Array [
            Object {},
          ]
        }
      >
        <Text
          style={
            Array [
              Object {
                "color": "#007AFF",
                "fontSize": 18,
                "margin": 8,
                "textAlign": "center",
              },
              Object {
                "color": "white",
              },
            ]
          }
        >
          Add
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`renders with snapshot with data 1`] = `
<View
  style={
    Object {
      "flex": 1,
      "justifyContent": "space-evenly",
      "paddingTop": 70,
    }
  }
>
  <View
    style={
      Object {
        "backgroundColor": "#8c8eab",
        "height": 1,
      }
    }
  />
  <RCTScrollView
    data={
      Array [
        Object {
          "id": "1234",
          "name": "item1",
          "status": "complete",
        },
      ]
    }
    getItem={[Function]}
    getItemCount={[Function]}
    keyExtractor={[Function]}
    onContentSizeChange={[Function]}
    onLayout={[Function]}
    onMomentumScrollBegin={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    viewabilityConfigCallbackPairs={Array []}
  >
    <View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "borderBottomWidth": 1,
              "borderColor": "#8c8eab",
              "flexDirection": "row",
              "justifyContent": "flex-start",
              "padding": 20,
            }
          }
        >
          <View
            accessible={true}
            collapsable={false}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
          >
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                Array [
                  Object {
                    "color": "green",
                    "fontSize": 20,
                  },
                  undefined,
                  Object {
                    "fontFamily": "anticon",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
            >
              
            </Text>
          </View>
          <Text
            style={
              Object {
                "alignSelf": "center",
                "fontSize": 16,
                "fontWeight": "500",
                "paddingLeft": 10,
              }
            }
          >
            item1
          </Text>
          <View
            accessible={true}
            collapsable={false}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignSelf": "center",
                "position": "absolute",
                "right": 10,
              }
            }
          >
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                Array [
                  Object {
                    "color": "#900",
                    "fontSize": 20,
                  },
                  undefined,
                  Object {
                    "fontFamily": "Material Icons",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
            >
              
            </Text>
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#4290f5",
        "borderRadius": 10,
        "height": 40,
        "justifyContent": "center",
        "position": "absolute",
        "right": 20,
        "top": 20,
        "width": 100,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <View
        style={
          Array [
            Object {},
          ]
        }
      >
        <Text
          style={
            Array [
              Object {
                "color": "#007AFF",
                "fontSize": 18,
                "margin": 8,
                "textAlign": "center",
              },
              Object {
                "color": "white",
              },
            ]
          }
        >
          Add
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`renders with snapshot with no data 1`] = `
<View
  style={
    Object {
      "flex": 1,
      "justifyContent": "space-evenly",
      "paddingTop": 70,
    }
  }
>
  <View
    style={
      Object {
        "backgroundColor": "#8c8eab",
        "height": 1,
      }
    }
  />
  <View
    style={
      Object {
        "alignItems": "center",
        "flex": 1,
        "justifyContent": "center",
      }
    }
  >
    <Text
      style={
        Object {
          "color": "black",
          "fontSize": 16,
          "fontWeight": "500",
        }
      }
    >
      No Data
    </Text>
  </View>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#4290f5",
        "borderRadius": 10,
        "height": 40,
        "justifyContent": "center",
        "position": "absolute",
        "right": 20,
        "top": 20,
        "width": 100,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <View
        style={
          Array [
            Object {},
          ]
        }
      >
        <Text
          style={
            Array [
              Object {
                "color": "#007AFF",
                "fontSize": 18,
                "margin": 8,
                "textAlign": "center",
              },
              Object {
                "color": "white",
              },
            ]
          }
        >
          Add
        </Text>
      </View>
    </View>
  </View>
</View>
`;
